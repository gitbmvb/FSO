Módulo 1 – Noções Base de Sistemas Operacionais

	A maioria dos computadores possui dois modos de operação: modo protegido (modo kernel) e modo usuário. Algumas instruções são utilizadas para controlar o hardware, como instruções de entrada e saída, que fazem modificação no disco rígido, por exemplo. No modo usuário, algumas instruções são proibidas de executar (instruções privilegiadas).
Obs:. Modo protegido NÃO É modo administrador/modo usuário. Ele é ainda mais forte/restrito.
	Sistema Operacional é um programa ou conjunto de programas, sendo a parte fundamental de software que executa em modo protegido, onde possui acesso a todo hardware e pode executar qualquer instrução que a máquina é capaz de executar. A grande diferença entre um sistema operacional e aplicações convencionais é a maneira como suas rotinas são executadas em função do tempo: um SO não é executado de forma linear como na maioria das aplicações, com início, meio e fim; suas rotinas são executadas concorrentemente em função de eventos assíncronos (que podem ocorrer a qualquer momento)
	Funções de um sistema operacional:
- Gerenciar os recursos da máquina;
	O computador é um conjunto de recursos físicos (processos, memórias, discos, rede, etc) e abstratos (processos, arquivos, etc) que serão compartilhados, de modo que o sistema operacional deve proteger esses recursos, especialmente em ambientes com múltiplos usuários, de forma que não interfiram uns nos outros.
	Para todo recurso, o SO deve manter informações sobre o recurso (endereço, estado, etc.), decidir quem pode acessar o recurso, e alocar e liberar o recurso. É desejável que o gerenciamento de recursos seja eficiente, maximizando a utilização de recursos, e que possua um tempo de resposta previsível.

- Fornecer ao usuário uma visão de sua interface com a máquina;
- Criar para o usuário uma abstração do hardware (máquina estendida)
	Também chamada de máquina abstrata, ela é equivalente ao hardware, porém mais simples de manipular e programar do que a máquina real, escondendo a complexidade do hardware e protegendo programadores e usuários.

●Parte II: Classificações de sistemas operacionais
Roteiro
46
●Os sistemas operacionais podem ser classificados
em três categorias:
–Sistemas Monoprogramáveis / Monotarefa
–Sistemas Multiprogramáveis / Multitarefa
–Sistemas com Múltiplos Processadores
Tipos de Sistemas Operacionais
47
Sistemas Monoprogramáveis
●Sistemas Operacionais voltados à execução de um
único programa
●Processador, memória, periféricos, permanecem
dedicados à um único programa
●Sistemas monotarefa possuem a raiz nos
computadores da década de 60
●MS-DOS da Microsoft
48
●Os sistemas multiprogramáveis permitem que os
recursos computacionais sejam compartilhados
entre os diversos usuários e aplicações
●Enquanto um programa espera um evento, outros
podem utilizar o processamento
●O sistema operacional é responsável por gerenciar
acessos concorrentes aos mesmos recursos
●Redução no tempo de resposta
Sistemas Multiprogramáveis
49
Sistemas Multiprogramáveis
●Sistemas multiprogramáveis:
–Sistemas Batch
–Sistemas de tempo compartilhado
–Sistemas de tempo real
50
Sistemas Batch
●Criados na década de 60, inspirado nos cartões
perfurados e fitas magnéticas
●Não exige interação do usuário com a aplicação
●As aplicações são organizadas e processadas em
lote
51
Sistemas de tempo compartilhado
●Os sistemas de tempo compartilhado permitem que diferentes
programas sejam executados a partir da divisão de tempo do
processador em pequenas fatias de tempo (time-slice)
●Diversas mudanças no SO e no hardware são necessárias para
permitir esse comportamento
●Principais detalhes do tópico “gerência de processo”
–Windows 98
–Linux 2.4
52
Sistemas de tempo real
●Possuem certas semelhança ao tempo compartilhado
●Porém, o tempo real exige aplicações rígidas de
limite de tempo a ser cumprido
●Subclassificados em tempo real crítico: caso ocorra
grandes prejuízo
●Controle de tráfego aéreo, controle de indústria
automobilística
53
Sistemas com múltiplos
processadores
●Possuem dois ou mais processadores interligados e
trabalhando em conjunto
●Permite vários programas sejam efetivamente executados
ao mesmo tempo
●Permite que um programa seja executado mais
rapidamente (se o programa for multithreaded)
●Herdaram vários fundamentos do time-sliced
–Windows XP e posteriores
–Linux 2.6 e posteriores
54
Sistemas Operacionais Usuais
●Classificação de alguns sistemas operacionais
amplamente utilizados
–Sistemas operacionais de computadores pessoais
–Sistemas operacionais de servidores
–Sistemas operacionais embarcados
55
Sistemas Operacionais de
Computadores Pessoais
●Sistemas operacionais comumente utilizados para o
uso simultâneo de apenas um usuário
●Utilizados em computadores de mesa, notebook
●Tipicamente, contém um pacote de escritório, com
editores de texto, planilhas eletrônicas
–Windows XP, Windows 7, Windows 8.1, Windows 10
–Linux: Ubuntu, Fedora, OpenSuse
56
Sistemas Operacionais de Servidores
●Sistemas cujo objetivo é servir o maior número
de usuários ao mesmo tempo
●Pode incluir diferentes tipos de serviços:
servidor web, e-mail, servidor de autenticação,
servidor de backup, etc.
–Windows 2008 Server, Windows 2012 Server
–Linux: Cent OS, Red Hat, Slackware
57
Sistemas Operacionais Embarcados
●Sistema muito popular de grande crescimento
ultimamente
●Sistemas operacionais que funcionam em
equipamentos que não aparentam ser um computador:
micro-ondas, TV, celulares e smartphones
–PalmOS, Windows CE
–Android, iOS, Windows Phone
58
Estrutura dos Sistemas
Operacionais
●Uma das mais importantes classificações dos sistemas
operacionais é de acordo com a estrutura que seu kernel (núcleo)
está organizado
●Tema de ampla pesquisa na década de 90
–Sistemas Monolíticos
–Sistemas em Camadas
–Máquinas Virtuais
–Micro-kernel (cliente/servidor)
–Exo-kernel
59
Sistemas Monolíticos
●É a organização de SO mais comum
●O SO operacional roda em modo protegido, todo
restante em modo usuário
●Tanenbaum: “Não há estrutura”/“Uma grande bagunça”
●A estrutura do SO é mantida em organização de código
●Possui a melhor organização para tempo de resposta
60
Sistemas Monolíticos
●Todos os procedimentos do núcleo são visíveis a todos
os outros
●Para se obter uma estrutura: todos os procedimentos
são forçados a fazer uma SVC (supervisor call).
Organização do Unix comercial
●Possui três camadas: um procedimento principal que
chama os procedimentos de serviço. E procedimentos
utilitários, compartilhados entre os de serviço
61
Sistemas Monolíticos
●Alguns sistemas monolíticos modernos não incluem
todas as possibilidades e serviços no núcleo, pois isso
ocupa muito espaço em memória
●Esses sistemas permitem “módulos de kernel”, dados
existentes no espaço de usuário que são inseridos pelo
administrador (root) no kernel
●Ex: ntfs.ko
–# modprobe ntfs
62
Sistemas em Camadas
●O sistema é organizado em camadas funcionais
●Cada camada faz uma chamada à camada
inferior
●THE (1968 – Dijkstra), MULTICS (Bell, MIT)
●A noção de camadas é fortemente reforçada pelo
hardware
63
Sistemas em Camadas
●Sistema Operacional THE:
5
4
3
2
1
0
Operador
Programas do usuário
Gerenciamento de E/S
Comunicação operador/processo
Gerenciamento de memória e tambor
Alocação de processador e multiprogramação
64
Micro-kernel
●Modelo cliente-servidor
●A maior parte das funções do SO é implementada a
nível de usuário (processos clientes)
●O núcleo é visto como um servidor para os clientes,
implementando a abstração de processos e
comunicação entre eles
●Falha em um servidor de arquivos não afeta o kernel
65
Micro-kernel
●Os processos interagem com SO através de troca de
mensagens
●Alta adaptabilidade a sistemas distribuídos
●Algumas partes de SO é impossível implementar esse
esquema: carregar comandos nos registradores físicos
●Difícil implementação, mas relativa popularidade no
meio
66
Micro-kernel
●Sistema Operacional Distribuído Mach:
Processo
Cliente
Processo
Cliente
Servidor de
arquivos
Servidor de
memória
Servidor de
terminais
Kernel
Hardware
67
●Foco na multiplexação segura do hardware
●Expõe o hardware às aplicações / ao espaço de
usuário
●Com as primitivas básicas de hardware, podem
ser implementadas em modo usuário as
abstrações tradicionais do SO
Exo-kernel
68
Exo-kernel
●O conceito de SO é divido em duas partes
–Exo-kernel: núcleo minimalista que faz a
multiplexação segura entre os recursos de
hardware, protegendo-os
–LibOS (sistemas operacionais biblioteca):
conjunto de biblioteca que gerenciam recursos e
oferecem abstrações de alto nível para as
aplicações
69
Máquinas Virtuais
●Os sistemas operacionais estruturados como máquinas
virtuais possuem, no mais baixo nível, um monitor de
máquina virtual
●Monitor de máquina virtual é executado pelo hardware
●Em cima do monitor, várias máquinas virtuais podem
ser utilizadas
●As máquinas virtuais implementam uma cópia do
hardware configurável
70
Máquinas Virtuais
●Hipervisor tipo 1 (Ex: ESX Server da VMware):
Hardware
Monitor de Máquina Virtual
Hardware Virtual Hardware Virtual
Aplicações
Guest OS Guest OS
Aplicações
Monitor de Máquina Virtual é um SO do tipo Máquinas Virtuais
71
Máquinas Virtuais
●Não confundir com uso de um Host SO.
Hipervisor tipo 2 (Ex: VMware Workstation):
Host SO é um outro tipo de SO (Monolítico, Camadas, etc.)
Hardware
HostSO
Hardware Virtual Hardware Virtual
Aplicações
Guest OS Guest OS
Aplicações
72
Contêineres
●Um concorrente das máquinas virtuais são os
contêineres (Ex: Docker, Podman).
●Utilizam namespace, cgroups, selinux para isolar
processos, ou seja, usam várias funcionalidades
do SO, mas não são SO: rodam em modo usuário
(administrador)
Hardware
Host OS
Docker Daemon
Aplicações
BINS/LIBS BINS/LIBS
Aplicações
73
